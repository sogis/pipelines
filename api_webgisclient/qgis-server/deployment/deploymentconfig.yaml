apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: qgis-server
  annotations:
    description: "Creates deploymentConfig for qgis-server"
parameters:
  - description: Openshift Namespace
    name: NAMESPACE
  - description: Image Stream Tag
    name: TAG
  - description: Environment
    name: ENVIRONMENT
  - description: Number of Replicas
    name: REPLICAS
  - description: cpu request
    name: CPU_REQUEST
  - description: cpu limit
    name: CPU_LIMIT
  - description: Memory Request
    name: MEMORY_REQUEST
  - description: Memory Limit
    name: MEMORY_LIMIT
labels:
  application: gdi
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    generation: 1
    labels:
      service: qgis-server
      app: gdi
    name: qgis-server
  spec:
    replicas: ${{REPLICAS}}
    revisionHistoryLimit: 1
    selector:
      service: qgis-server
    strategy:
      resources: {}
      rollingParams:
        maxUnavailable: 10%
        timeoutSeconds: 150
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          service: qgis-server
          app: gdi
      spec:
        containers:
        - env:
          - name: APACHE_LOG_LEVEL
            value: "info"
          - name: QGIS_SERVER_LOG_LEVEL
            value: "1"
          - name: FCGI_MIN_PROCESSES
            value: "2"
          - name: FCGI_MAX_PROCESSES
            value: "4"
          - name: FCGI_MAX_REQUESTLEN
            value: "26214400"
          - name: FCGI_PROCESS_LIFE_TIME
            value: "0"
          - name: FCGI_IDLE_TIMEOUT
            value: "300"
          - name: QGIS_FCGI_IOTIMEOUT
            value: "65"
          - name: QGIS_SERVER_IGNORE_BAD_LAYERS
            value: "1"
          - name: QGIS_SERVER_LOG_STDERR
            value: "1"
          image: sourcepole/qwc-qgis-server:${TAG}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: ows/somap?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetCapabilities
              port: 80
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 3
          name: sogis-qgis-server
          ports:
          - containerPort: 80
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: ows/somap?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetCapabilities
              port: 80
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          startupProbe:
            httpGet: 
              path: ows/somap?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetMap&BBOX=2598995.693892659619,1227339.217308256077,2603256.314620688558,1230464.738330131164&CRS=EPSG:2056&WIDTH=533&HEIGHT=391&LAYERS=ch.so.agi.gemeindegrenzen&STYLES=&FORMAT=image/png&DPI=96&MAP_RESOLUTION=96&FORMAT_OPTIONS=dpi:96
              port: 80
              scheme: HTTP
            failureThreshold: 5
            periodSeconds: 21
            timeoutSeconds: 20

          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /data
            name: qgs-resources
          - mountPath: /usr/local/share/fonts
            name: qgs-resources
            subPath: truetype
          - mountPath: /geodata
            name: datensogispicmir
          - mountPath: /etc/postgresql-common
            name: qgis-server-config-claim
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccountName: qgis-server
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - secret:
            items:
            - key: pg_service.conf
              path: pg_service.conf
            secretName: qgis-server-pg-service-secret
          name: qgis-server-config-claim
        - name: qgs-resources
          persistentVolumeClaim:
            claimName: qgs-resources-claim
        - name: datensogispicmir
          persistentVolumeClaim:
            claimName: datensogispicmir-claim${ENVIRONMENT}
    test: false
    triggers: []
