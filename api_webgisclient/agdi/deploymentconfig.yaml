apiVersion: v1
kind: Template
metadata:
  name: agdi
  annotations:
    description: "Creates deploymentConfig for agdi"
parameters:
  - description: Openshift Namespace
    name: NAMESPACE
  - description: Infrastructure Environment
    name: ENVIRONMENT
  - description: Image Stream Tag
    name: TAG
  - description: Number of Replicas
    name: REPLICAS
  - description: cpu request
    name: CPU_REQUEST
  - description: cpu limit
    name: CPU_LIMIT
  - description: Memory Request
    name: MEMORY_REQUEST
  - description: Memory Limit
    name: MEMORY_LIMIT
labels:
  application: gdi
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      kompose.cmd: kompose --file docker-compose-4openshift.yml --provider openshift
        convert
      kompose.version: 1.10.0 (8bb0907)
    generation: 1
    labels:
      service: agdi 
      app: gdi
    name: agdi 
  spec:
    replicas: ${{REPLICAS}}
    selector:
      service: agdi 
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 10%
        maxUnavailable: 10%
        timeoutSeconds: 120
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          service: agdi 
          app: gdi
      spec:
        containers:
        - env:
          - name: JASPER_REPORTS_DIR
            value: /jasper/reports
          - name: PROJECT_OUTPUT_DIR
            value: /qgs-resources
          - name: QWC_ASSETS_DIR
            value: /qwc-assets
          - name: SELECTION_COLOR
            value: 255,255,0,119
          - name: SOLR_UPDATE_URL
            value: http://indexupdater.solr-cloud-${ENVIRONMENT}.svc/queue?ds=foreground,background&dih=solr/gdi/dih_metadata
          - name: CONFIG_PATH
            value: /srv/qwc_service/config
          - name: SERVICE_MOUNTPOINT
            value: /agdi
          image: docker-registry.default.svc:5000/${NAMESPACE}/agdi:${TAG}
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: healthz
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: sogis-agdi
          ports:
          - containerPort: 9090 
            protocol: TCP
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/www
            name: wsgi-service-config-claim
          - mountPath: /qgs-resources
            name: qgs-resources
          - mountPath: /qwc-assets
            name: qwc-assets
          - mountPath: /geodata
            name: datensogispicmir
            readOnly: true
          - mountPath: /jasper/reports
            name: reports
          - mountPath: /srv/qwc_service/config/default/agdiConfig.json
            name: config-json-file
            subPath: agdiConfig.json
          - mountPath: /srv/qwc_service/config/default/permissions.json
            name: permission-file
            subPath: permissions.json
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - secret:
            items:
            - key: pg_service.conf
              path: .pg_service.conf
            secretName: wsgi-service-pg-config
          name: wsgi-service-config-claim
        - configMap:
            items:
            - key: agdiConfig.json
              path: agdiConfig.json
            name: agdiconfig-json
          name: config-json-file
        - configMap:
            items:
            - key: permissions.json
              path: permissions.json
            name: permission-json
          name: permission-file
        - name: qgs-resources
          persistentVolumeClaim:
            claimName: qgs-resources-claim
        - name: qwc-assets
          persistentVolumeClaim:
            claimName: qwc-assets-claim
        - name: datensogispicmir
          persistentVolumeClaim:
            claimName: datensogispicmir-claim-${ENVIRONMENT}
            readOnly: true
        - name: reports
          persistentVolumeClaim:
            claimName: reports-claim
    test: false
    triggers: []
