apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: jenkins-persistent
  pipeline: wgc
metadata:
  name: wgc-pipeline
objects:
- apiVersion: v1
  data:
    template: |-
      <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
        <inheritFrom></inheritFrom>
        <name>json2qgs-agent</name>
        <namespace></namespace>
        <privileged>false</privileged>
        <capOnlyOnAlivePods>false</capOnlyOnAlivePods>
        <alwaysPullImage>false</alwaysPullImage>
        <instanceCap>4</instanceCap>
        <slaveConnectTimeout>100</slaveConnectTimeout>
        <idleMinutes>600</idleMinutes>
        <activeDeadlineSeconds>0</activeDeadlineSeconds>
        <label>json2qgs-agent</label>
        <serviceAccount>jenkins</serviceAccount>
        <nodeSelector></nodeSelector>
        <nodeUsageMode>NORMAL</nodeUsageMode>
        <customWorkspaceVolumeEnabled>false</customWorkspaceVolumeEnabled>
        <workspaceVolume class="org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume">
          <memory>false</memory>
        </workspaceVolume>
        <volumes>
          <org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
            <mountPath>/qgs-resources</mountPath>
            <claimName>qgs-resources-claim</claimName>
          </org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
        </volumes>
        <containers>
          <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
            <name>jnlp</name>
            <image>image-registry.openshift-image-registry.svc:5000/${PROJECTNAME}/json2qgs-agent:${IMAGE_TAG_AGENT}</image>
            <privileged>false</privileged>
            <alwaysPullImage>true</alwaysPullImage>
            <workingDir>/tmp</workingDir>
            <command></command>
            <args>${computer.jnlpmac} ${computer.name}</args>
            <ttyEnabled>false</ttyEnabled>
            <resourceRequestCpu>250m</resourceRequestCpu>
            <resourceRequestMemory>1Gi</resourceRequestMemory>
            <resourceLimitCpu>3000m</resourceLimitCpu>
            <resourceLimitMemory>8Gi</resourceLimitMemory>
            <envVars/>
            <ports/>
            <livenessProbe>
              <execArgs></execArgs>
              <timeoutSeconds>0</timeoutSeconds>
              <initialDelaySeconds>0</initialDelaySeconds>
              <failureThreshold>0</failureThreshold>
              <periodSeconds>0</periodSeconds>
              <successThreshold>0</successThreshold>
            </livenessProbe>
          </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
        </containers>
        <envVars/>
        <annotations/>
        <imagePullSecrets/>
        <nodeProperties/>
      </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
  kind: ConfigMap
  metadata:
    labels:
      role: jenkins-slave
      app: jenkins-persistent
      pipeline: wgc
    name: json2qgs-agent
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: json2qgs-agent
    labels:
      app: jenkins-persistent
      pipeline: wgc
  spec:
    tags:
    - from:
        kind: DockerImage
        name: sogis/json2qgs-agent
      name: latest
parameters:
- description: Name of the project
  name: PROJECTNAME
  required: true
- description: Tag of the config generator image
  name: IMAGE_TAG_AGENT
