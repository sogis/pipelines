apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ressources-jasper-reporting-service
  annotations:
    description: >-
      "Creates necessary ressources for jasper-reporting-service"
parameters:
  - description: DB Server Url
    name: DB_SERVER
  - description: Geo DB Server
    name: GEO_DB_SERVER
  - description: Imdas DB Server
    name: IMDAS_DB_SERVER
    value:
  - description: Pub DB
    name: DB_PUB
    value:
  - description: Edit DB
    name: DB_EDIT
    value:
  - description: Config DB
    name: DB_CONFIG
    value:
  - description: Imdas DB
    name: DB_IMDAS
    value:
  - description: Sogis DB
    name: DB_SOGIS
    value:
  - description: DB User report_server
    name: USER_REPORT_SERVER
    value:
  - description: Password DB User report_server
    name: PW_REPORT_SERVER
    value:
  - description: DB User mswrite
    name: USER_MSWRITE
    value:
  - description: Password DB User mswrite
    name: PW_MSWRITE
    value:
  - description: Imdas DB User
    name: USER_IMDAS_DB
    value:
  - description: Password Imdas DB User
    name: PW_IMDAS_DB_USER
    value:
  - description: DB User sogis_service
    name: USER_SOGIS_SERVICE
    value:
  - description: Password DB User sogis_service
    name: PW_SOGIS_SERVICE
    value:
  - description: Namespace
    name: NAMESPACE
    value: gdi-devel
objects:
- apiVersion: v1
  stringData:
    pg_service.conf: |
      [sogis_webmapping]
      host=${DB_SERVER}
      port=5432
      dbname=${DB_PUB}
      user=${USER_REPORT_SERVER}
      password=${PW_REPORT_SERVER}
      sslmode=require
  kind: Secret
  metadata:
    labels:
      app: gdi
      service: jasper-reporting-service
    name: jasper-reporting-service-pg-config
    namespace: ${NAMESPACE}
- apiVersion: v1
  stringData:
    application.properties: |
      # H2
      spring.h2.console.enabled=false
      # Datasource
      spring.datasource0.jdbc-url=jdbc:postgresql://${DB_SERVER}/${DB_PUB}?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory

      spring.datasource0.username=${USER_REPORT_SERVER}

      spring.datasource0.password=${PW_REPORT_SERVER}

      spring.datasource0.driver-class-name=org.postgresql.Driver

      spring.datasource1.jdbc-url=jdbc:postgresql://${GEO_DB_SERVER}/${DB_SOGIS}?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory

      spring.datasource1.username=${USER_MSWRITE}

      spring.datasource1.password=${PW_MSWRITE}

      spring.datasource1.driver-class-name=org.postgresql.Driver

      spring.datasource2.jdbc-url=jdbc:sqlserver://${IMDAS_DB_SERVER}:1433;DatabaseName=${DB_IMDAS}

      spring.datasource2.username=${USER_IMDAS_DB}

      spring.datasource2.password=${PW_IMDAS_DB_USER}

      spring.datasource2.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
      
      spring.datasource2.connection-test-query=SELECT 1

      spring.datasource2.connection-timeout=5000

      spring.datasource2.validation-timeout=2000

      # Datasource Edit DB

      spring.datasource3.jdbc-url=jdbc:postgresql://${DB_SERVER}/${DB_EDIT}?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory

      spring.datasource3.username=${USER_REPORT_SERVER}

      spring.datasource3.password=${PW_REPORT_SERVER}

      spring.datasource3.driver-class-name=org.postgresql.Driver

      # Custom Parameters
 
      #logging.level.com.zaxxer.hikari.HikariConfig=DEBUG

      #logging.level.com.zaxxer.hikari=TRACE
      management.security.enabled=false

      endpoints.health.sensitive=false
      
      reports.directory=/reports/

      reports.locale=de_CH
  kind: Secret
  metadata:
    labels:
      app: gdi
      service: jasper-reporting-service
    name: jasper-config
    namespace: ${NAMESPACE}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose --file docker-compose-4openshift.yml --provider openshift
        up
      kompose.version: 1.10.0 (8bb0907)
    creationTimestamp: null
    labels:
      service: jasper-reporting-service
      app: gdi
    name: jasper-reporting-service
  spec:
    ports:
    - name: "80"
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      service: jasper-reporting-service
    sessionAffinity: None
    type: ClusterIP
