apiVersion: v1
kind: Template
metadata:
  name: legend-service
  annotations:
    description: "Creates deploymentConfig for legend-service"
parameters:
  - description: Openshift Namespace
    name: NAMESPACE
  - description: Image Stream Tag
    name: TAG
labels:
  application: gdi
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      kompose.cmd: kompose --file docker-compose-4openshift.yml --provider openshift
        convert
      kompose.version: 1.10.0 (8bb0907)
    generation: 1
    labels:
      service: legend-service
      app: gdi
    name: legend-service
  spec:
    replicas: 2
    selector:
      service: legend-service
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 10%
        maxUnavailable: 10%
        timeoutSeconds: 120
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          service: legend-service
          app: gdi
      spec:
        containers:
        - env:
          - name: default_qgis_server_url
            value: http://qgis-server.${NAMESPACE}.svc/ows/
          - name: legend_images_path
            value: /srv/qwc_service/config/legends
          - name: JWT_SECRET_KEY
            value: fce9dd0cc67ae26c7b2fb912e31a4657e99014e50ccb90bd
          - name: ALLOW_BASIC_AUTH_USER
            value: "True"
          - name: CONFIG_PATH
            value: /srv/qwc_service/config
          - name: SERVICE_MOUNTPOINT
            value: /api/v1/legend
          image: docker-registry.default.svc:5000/${NAMESPACE}/legend-service:${TAG}
          imagePullPolicy: IfNotPresent
          name: sogis-legend-service
          ports:
          - containerPort: 9090
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/www
            name: wsgi-service-config-claim
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - secret:
            defaultMode: 420
            items:
            - key: pg_service.conf
              path: .pg_service.conf
            secretName: wsgi-service-pg-config
          name: wsgi-service-config-claim
    test: false
    triggers: []
