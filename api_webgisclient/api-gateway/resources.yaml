apiVersion: v1
kind: Template
metadata:
  name: ressources-qwc-service
  annotations:
    description: >-
      "Creates necessary ressources for qwc-service"
parameters:
  - description: Namespace
    name: NAMESPACE
  - description: GDI Environment
    name: ENVIRONMENT
  - description: URL for GDI Environment
    name: BASEURL
  - description: WMTS URL
    name: WMTS_URL
  - description: Matomo URL
    name: MATOMO_URL
  - description: Url with no SES
    name: NO_SES_URL
  - description: Basic Auth User Password in base64 encoding
    name: BASICAUTH
objects:
- apiVersion: v1
  data:
    nginx_base_os.conf: |
      #user  nginx;
      worker_processes  auto;
      
      error_log  /var/log/nginx/error.log warn;
      pid        /tmp/nginx.pid;
      
      
      events {
          worker_connections  1024;
      }
      
      
      http {
          include       /etc/nginx/mime.types;
          default_type  application/octet-stream;
          map "$time_local:$msec" $time_local_w_ms { ~(^\S+)(\s+\S+):\d+.(\d+)$ $1.$3$2; }
      
          log_format  json  '{"time": "$time_local_w_ms", "client_addr": "$http_hsp_client_addr", "http_x_forwarded_for": "$http_x_forwarded_for", "status": "$status", '
                            '"request_method": "$request_method", "server_protocol": "$server_protocol", "address": "$uri", "args": "$args", "request": "$request", '
                            '"body_bytes_sent": "$body_bytes_sent", "http_user_agent": "$http_user_agent", "remote_user": "$remote_user", '
                            '"request_time": "$request_time", "upstream_connect_time": "$upstream_connect_time", "upstream_header_time": "$upstream_header_time", '
                            '"upstream_response_time": "$upstream_response_time","upstream_addr": "$upstream_addr" }';

          access_log  /var/log/nginx/access.log  json;
          access_log  /var/log/nginx-soft/access.log json;
      
          sendfile        on;
          #tcp_nopush     on;
      
          keepalive_timeout  65;

          proxy_cache_path /cache levels=1:2 keys_zone=my_cache:30m max_size=5g
                 inactive=30m use_temp_path=off;

          #gzip on;

          include /etc/nginx/conf.d/*.conf;
      }
  kind: ConfigMap
  metadata:
    name: nginx-base-config
    labels:
      service: api-gateway
      app: gdi
- apiVersion: v1
  data:
    nginx_os.conf: |
      server {
        listen 8081 ssl;
        server_name  localhost;
        ssl_certificate /etc/nginx/certs/tls.crt;
        ssl_certificate_key /etc/nginx/certs/tls.key;
        
        underscores_in_headers on;

        proxy_redirect     off;
        proxy_set_header   Host              $http_host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $http_hsp_client_addr;
        proxy_set_header   X-Forwarded-Proto $scheme;

        proxy_buffer_size 512k;
        proxy_buffers 8 512k;
        proxy_busy_buffers_size 512k;
        proxy_temp_file_write_size 512k;
        client_max_body_size 50M;

        add_header 'Access-Control-Allow-Origin' '*';

        location /nginx_status {
            stub_status on;
            access_log  on;
        }

        location / {
            # If st is a coordinate and c exists set hc=1 and remove st
            if ($args ~ ^(.+&|)st(=[0-9%C,]+)(.*)(c=[0-9%C,]+)(&s=[0-9]+)$) {
              return 301 "$uri?$1hc=1$3$4$5";
            }
            # If st is a coordinate and c doesnt exist set hc=1, set c=st and remove st (case Imdas Pro)
            if ($args ~ ^(.+&|)st(=[0-9%C,]+)(.*)$) {
              return 301 "$uri?$1hc=1$3&c$2&s=250";
            }
            proxy_pass http://qwc-service.${NAMESPACE}.svc;
        }

        location ~ /map/grundstuecksinformation {
            rewrite ^/map/grundstuecksinformation$ /map?realty= break;
            proxy_pass http://qwc-service.${NAMESPACE}.svc;
        }
        location ~ /map/kbs {
            rewrite ^/map/kbs$ /map?k=3eb2c19b4 break;
            proxy_pass http://qwc-service.${NAMESPACE}.svc;
        }

        location ~ /map/([a-z_]+) {
            rewrite ^/map/([a-z_]+)$ /map?t=$1 break;
            proxy_pass http://qwc-service.${NAMESPACE}.svc;
        }

        location /simi/ {
            if ($http_hsp_client_addr !~ ^10\.36\.([0-9]+)(.*)([0-9]+)$) {
                return 403;
            }
            proxy_set_header Host               $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-Proto  $scheme;

            # Required to send real client IP to application server
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_pass http://simi.${NAMESPACE}.svc/app/;

            # Required for folder redirect
            proxy_cookie_path       /app /;
            proxy_set_header Cookie $http_cookie;
            proxy_redirect http://simi.${NAMESPACE}.svc/app/ http://simi.${NAMESPACE}.svc/;
        }

        location ~ ^/docs/(ch\.so\.arp\.nutzungsvereinbarungen|ch\.so\.awjf\.biotopbaeume)/(.*)$ {
            set $url1 $1; 
            set $url2 $2;
            if ($http_hsp_client_addr !~ ^10\.36\.([0-9]+)(.*)([0-9]+)$) { 
                return 403;
            }
            alias /geodata/documents/$url1/$url2;
            autoindex off;
        }

        location ~ ^/docs/(ch\.so\.alw\.strukturverbesserungen\/nicht_oeffentlich)/(.*)$ {
            set $url1 $1; 
            set $url2 $2;
            if ($http_hsp_client_addr !~ ^10\.36\.([0-9]+)(.*)([0-9]+)$) { 
                return 403;
            }
            alias /geodata/documents/$url1/$url2;
            autoindex on;
        }

        location /docs {
            alias /geodata/documents;
            autoindex on;
        }

        location ~ /geodata/ch.swisstopo.lk(.*) {
            allow 193.135.87.0/24;
            deny all;
        }

        location ~ ^/geodata/ch.so.agi.lidar_2019.ept/(ept-data)/(.*)$ {
            alias /geodata/geodata/ch.so.agi.lidar_2019.ept/$1/$2;
            autoindex off;
        }

        location /geodata {
            alias /geodata/geodata;
            autoindex on;
        }

        location /auth/ {
            proxy_pass http://auth-service.${NAMESPACE}.svc;
        }

        location /ows {
            proxy_pass http://ogc-service.${NAMESPACE}.svc;
            proxy_cache my_cache;
            proxy_cache_valid 200 30m;
        }

        location /wms {
            if ( $arg_SRS ~ (EPSG:21781|EPSG%3A21781) ) {
                return 410;
            }
            if ( $arg_CRS ~ (EPSG:21781|EPSG%3A21781) ) {
                return 410;
            }
            if ( $arg_WIDTH = 1 ) {
                return 422;
            }
            if ( $arg_HEIGHT = 1 ) {
                return 422;
            }
            if ( $arg_BBOX ~ (-) ) {
                return 422;
            }
            proxy_pass http://ogc-service.${NAMESPACE}.svc/ows/somap;
        }
        location /api/wms {
            if ( $arg_SRS ~ (EPSG:21781|EPSG%3A21781) ) {
                return 410;
            }
            if ( $arg_CRS ~ (EPSG:21781|EPSG%3A21781) ) {
                return 410;
            }
            if ( $arg_WIDTH = 1 ) {
                return 422;
            }
            if ( $arg_HEIGHT = 1 ) {
                return 422;
            }
            if ( $arg_BBOX ~ (-) ) {
                return 422;
            }
            proxy_pass http://ogc-service.${NAMESPACE}.svc/ows/somap;
            proxy_cache my_cache;
            proxy_cache_valid 200 30m;
        }

        location /api/wmsauth {
            if ( $arg_SRS ~ (EPSG:21781|EPSG%3A21781) ) {
                return 410;
            }
            if ( $arg_CRS ~ (EPSG:21781|EPSG%3A21781) ) {
                return 410;
            }
            if ( $arg_WIDTH = 1 ) {
                return 422;
            }
            if ( $arg_HEIGHT = 1 ) {
                return 422;
            }
            if ( $arg_BBOX ~ (-) ) {
                return 422;
            }
            proxy_pass http://ogc-service.${NAMESPACE}.svc/ows/somap;
            proxy_set_header Authorization "Basic ${BASICAUTH}";
            proxy_cache my_cache;
            proxy_cache_valid 200 30m;
        }

        location /wfs {
            # Pretty dirty hack to add MaxFeatures in a rewrite rule. 
            #See https://stackoverflow.com/questions/57882123/how-can-i-use-and-operator-in-if-statement-in-nginx
            set $temp_cache 0;
            if ($args ~* getfeature ) {
              set $temp_cache 1;
            }
            if ($args !~* MAXFEATURES) {
              set $temp_cache 1$temp_cache;
            }
            if ($temp_cache = 11) {
              rewrite ^ https://${BASEURL}$uri?MAXFEATURES=20000 last;
            }
            proxy_pass http://ogc-service.${NAMESPACE}.svc/ows/somap;
        }

        location /api/wfs {
            # Pretty dirty hack to add MaxFeatures in a rewrite rule. 
            #See https://stackoverflow.com/questions/57882123/how-can-i-use-and-operator-in-if-statement-in-nginx
            set $temp_cache 0;
            if ($args ~* getfeature ) {
              set $temp_cache 1;
            }
            if ($args !~* MAXFEATURES) {
              set $temp_cache 1$temp_cache;
            }
            if ($temp_cache = 11) {
              rewrite ^ https://${BASEURL}$uri?MAXFEATURES=20000 last;
            }
            proxy_pass http://ogc-service.${NAMESPACE}.svc/ows/somap;
        }

        location /api/v1/permalink {
            proxy_pass http://permalink-service.${NAMESPACE}.svc;
        }

        location /elevation {
            proxy_pass http://elevation-service.${NAMESPACE}.svc;
        }

        location /api/search/v2 {
            proxy_pass http://search-service.${NAMESPACE}.svc;
        }

        location /api/data/v1 {
            proxy_pass http://data-service.${NAMESPACE}.svc;
        }

        location /api/dataproduct/v1 {
            proxy_pass http://dataproduct-service.${NAMESPACE}.svc;
        }
        location /api/v1/mapinfo {
            proxy_pass http://mapinfo-service.${NAMESPACE}.svc;
        }

        location /api/oereb {
            if ($http_hsp_client_addr ~ ^18\.156\.190\.100$|^3\.72\.210\.3$) {
                return 404;
            }
            proxy_set_header 'X-FORWARDED-HOST' '${BASEURL}';
            proxy_set_header 'X-FORWARDED-PREFIX' '/api/oereb';
            proxy_set_header 'X-FORWARDED-PROTO' 'https';
            proxy_pass http://oereb-web-service.agi-oerebv2-${ENVIRONMENT}.svc/;
        }

        location /api/v1/plotinfo {
            proxy_pass http://plotinfo-service.${NAMESPACE}.svc;
        }

        location /api/v1/print {
            proxy_pass http://print-service.${NAMESPACE}.svc;
        }

        location /api/v1/legend {
            proxy_pass http://legend-service.${NAMESPACE}.svc;
        }

        location /api/v1/featureinfo {
            proxy_pass http://featureinfo-service.${NAMESPACE}.svc;
        }

        location /api/v1/ccc {
            proxy_pass http://ccc-config.${NAMESPACE}.svc/api/v1/ccc;
        }

        location /api/v1/document {
            proxy_connect_timeout       1800;
            proxy_send_timeout          1800;
            proxy_read_timeout          1800;
            send_timeout                1800;
            proxy_pass http://document-service.${NAMESPACE}.svc;
        }

        location /api/v1/landreg {
            proxy_pass http://landreg-service.${NAMESPACE}.svc;
        }
        location /api/wms-cache/ {
            proxy_pass http://${WMTS_URL}/mapcache/;
            proxy_set_header Host       $proxy_host;
        }

        location /api/wmts/ {
            proxy_pass http://${WMTS_URL}/mapcache/wmts/;
            proxy_set_header Host       $proxy_host;
            proxy_cache my_cache;
            proxy_cache_valid 200 30m;
        }

        location /wms/oereb {
            proxy_pass http://oereb-wms.agi-oerebv2-${ENVIRONMENT}.svc;
        }

        location /gb2av {
            proxy_pass http://gb2av.agi-apps-${ENVIRONMENT}.svc/;
        }

        location /ilivalidator {
            proxy_connect_timeout       1200;
            proxy_send_timeout          1200;
            proxy_read_timeout          1200;
            send_timeout                1200;
            proxy_set_header   X-Forwarded-For $remote_addr;
            proxy_set_header   Host $http_host;
            proxy_pass http://ilivalidator-service.agi-apps-${ENVIRONMENT}.svc/ilivalidator/; 
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "upgrade";
        }

        location /ili2gpkg {
            proxy_set_header   X-Forwarded-For $remote_addr;
            proxy_set_header   Host $http_host;
            proxy_pass http://ili2gpkg-web-service.agi-apps-${ENVIRONMENT}.svc/;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "upgrade";
        }

        location /av_datenabgabe {
            proxy_set_header 'X-FORWARDED-HOST' '${BASEURL}';
            proxy_set_header 'X-FORWARDED-PREFIX' '/av_datenabgabe';
            proxy_set_header 'X-FORWARDED-PROTO' 'https';
            proxy_pass http://cadastral-data-disposal.agi-apps-${ENVIRONMENT}.svc/;
        }

        location /avgbs2mtab {
            proxy_set_header 'X-FORWARDED-HOST' '${BASEURL}';
            proxy_set_header 'X-FORWARDED-PREFIX' '/avgbs2mtab';
            proxy_set_header 'X-FORWARDED-PROTO' 'https';
            proxy_pass http://avgbs2mtab-web-service.agi-apps-${ENVIRONMENT}.svc/;
        }

        location /ews {
            proxy_pass http://heatdrill-service.agi-apps-${ENVIRONMENT}.svc/service/;
        }

        location /lidar-browser {
            proxy_pass http://lidar-browser.agi-apps-${ENVIRONMENT}.svc/;
        }

        location /standortkarte/ {
            proxy_pass http://standortkarte.agi-apps-${ENVIRONMENT}.svc/;
        }

        location /modelfinder/ {
            proxy_set_header 'X-FORWARDED-PREFIX' '/modelfinder';
            proxy_pass http://modelfinder.agi-apps-${ENVIRONMENT}.svc/;
        }

        location /models {
            proxy_pass http://interlis-repository.agi-apps-${ENVIRONMENT}.svc/;
        }

        location /repochecker/ {
            proxy_set_header 'X-FORWARDED-PREFIX' '/repochecker';
            proxy_pass http://interlis-repo-checker.agi-apps-${ENVIRONMENT}.svc/;
        }

        #location /api/cadastre/v1 {
        #    proxy_pass http://cadastre-web-service.agi-apps-test.svc/;
        #}

        location /api/embed/v1 {
            proxy_set_header 'X-FORWARDED-HOST' '${BASEURL}';
            proxy_set_header 'X-FORWARDED-PREFIX' '/api/embed/v1';
            proxy_set_header 'X-FORWARDED-PROTO' 'https';
            proxy_pass http://wgc-embedded.agi-apps-${ENVIRONMENT}.svc/;
        }

        # For Statuscake Tests
        location /indexupdater {
            proxy_pass http://indexupdater.solr-cloud-${ENVIRONMENT}.svc/status;
        }
        location /apidoc.html {
            root   /usr/share/nginx/html;
        }

        location /analytics {
            proxy_set_header 'X-FORWARDED-HOST' '${BASEURL}';
            proxy_set_header 'X-FORWARDED-PREFIX' '/analytics';
            proxy_set_header 'X-FORWARDED-PROTO' 'https';
            proxy_pass https://${MATOMO_URL}/;
        }

        #error_page  404   /404.html;
        #location = /404.html {
        #    root   /usr/share/nginx/html;
        #}
        error_page 410    /epsg.html;
        location = /epsg.html {
            root   /usr/share/nginx/html;
        }
        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /maintenance.html;
        #location = /maintenance.html {
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
      }
  kind: ConfigMap
  metadata:
    name: nginx-config
    labels:
      service: api-gateway
      app: gdi
- apiVersion: v1
  data:
    my_logs.conf: |
      /var/log/nginx/*.log {
        daily
        missingok
        rotate 1
        dateformat -%Y%m%d-%s
        notifempty
        copytruncate
        create 0644 nginx nginx
        olddir /tmp
      }
  kind: ConfigMap
  metadata:
    name: logrotate-config
    labels:
      service: api-gateway
      app: gdi
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: api-gateway
    labels:
      app: gdi
      service: api-gateway
  spec:
    tags:
      - name: latest
        from:
          kind: DockerImage
          name: 'image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/api-gateway:latest'
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: filebeat
    labels:
      app: gdi
      service: filebeat
  spec:
    tags:
      - name: latest
        from:
          kind: DockerImage
          name: 'image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/filebeat:latest'
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: api-gateway-cert
    labels:
      app: gdi
      service: api-gateway
    name: api-gateway
  spec:
    ports:
    - name: 443-tcp
      port: 443
      protocol: TCP
      targetPort: 8081
    selector:
      service: api-gateway
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 120s
    labels:
      app: gdi
      service: api-gateway
    name: api-gateway
  spec:
    host: ${BASEURL}
    port:
      targetPort: 443-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: reencrypt
    to:
      kind: Service
      name: api-gateway
      weight: 100
    wildcardPolicy: None
  status:
    ingress: null
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: gdi
      service: api-gateway
    annotations:
      haproxy.router.openshift.io/timeout: 1200s
      openshift.io/long-description: >-
        "Route Necessary for Autologin check. Checks if user comes from intra- or internet. If user comes from intranet Single Sign On is used"
    name: api-gateway-ohne-ses
  spec:
    host: ${NO_SES_URL}.apps.ocp.so.ch
    port:
      targetPort: 443-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: reencrypt
    to:
      kind: Service
      name: api-gateway
      weight: 100
    wildcardPolicy: None
