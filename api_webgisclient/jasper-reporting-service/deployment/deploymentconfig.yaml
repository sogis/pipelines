apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: jasper-reporting-service
  annotations:
    description: "Creates deploymentConfig for jasper-reporting-service"
parameters:
  - description: Openshift Namespace
    name: NAMESPACE
  - description: "Image Stream Tag"
    name: TAG
  - description: 'Number of Replicas'
    name: REPLICAS
  - description: cpu request
    name: CPU_REQUEST
  - description: cpu limit
    name: CPU_LIMIT
  - description: Memory Request
    name: MEMORY_REQUEST
  - description: Memory Limit
    name: MEMORY_LIMIT
labels:
  application: gdi
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      kompose.cmd: kompose --file docker-compose-4openshift.yml --provider openshift
        convert
      kompose.version: 1.10.0 (8bb0907)
    labels:
      service: jasper-reporting-service
      app: gdi
    name: jasper-reporting-service
  spec:
    replicas: ${{REPLICAS}}
    revisionHistoryLimit: 1
    selector:
      service: jasper-reporting-service
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 10%
        maxUnavailable: 10%
        timeoutSeconds: 120
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          service: jasper-reporting-service
          app: gdi
      spec:
        containers:
        - env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: JASPER_REPORTING_SERVICE
              value: 0.5.1
          image: sogis/jasper-reporting-service:${TAG}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: >-
                /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: sogis-jasper-reporting-service
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: >-
                /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 20
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /srv/jasper-reporting-service/reports
            name: reports
          - mountPath: /srv/jasper-reporting-service/config
            name: jasper-config-claim
            readOnly: true
          - mountPath: /etc/postgresql-common
            name: jasper-reporting-service-config-claim
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - secret:
            items:
            - key: pg_service.conf
              path: pg_service.conf
            secretName: jasper-reporting-service-pg-service-secret
          name: jasper-reporting-service-config-claim
        - name: reports
          persistentVolumeClaim:
            claimName: reports-claim
        - secret:
            items:
            - key: application.properties
              path: application.properties
            secretName: jasper-reporting-service-application-properties-secret
          name: jasper-config-claim
    test: false
    triggers: []
