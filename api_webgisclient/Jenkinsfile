library identifier: 'jenkins-shared-libs@master', retriever: modernSCM(
    [$class: 'GitSCMSource',
     remote: 'https://github.com/sogis/jenkins-shared-libs.git'])
pipeline {
    agent any 
    options {
        // set a timeout of 15 minutes for this pipeline
        timeout(time: 15, unit: 'MINUTES')
    }
    stages {
        stage ('preamble') {
            steps {
                script {
                    version = stagePreamble.call()
                }
            }
        }
        stage('Deploy Services') {
            parallel {
                stage ('Deploy permission-service') {
                    steps {
                        build job: 'permission-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy qwc-service') {
                    steps {
                        build job: 'qwc-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy data-service') {
                    steps {
                        build job: 'data-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy dataproduct-service') {
                    steps {
                        build job: 'dataproduct-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy document-service') {
                    steps {
                        build job: 'document-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy elevation-service') {
                    steps {
                        build job: 'elevation-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy featureinfo-service') {
                    steps {
                        build job: 'featureinfo-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy jasper-reporting-service') {
                    steps {
                        build job: 'jasper-reporting-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy landreg-service') {
                    steps {
                        build job: 'landreg-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy legend-service') {
                    steps {
                        build job: 'legend-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy mapinfo-service') {
                    steps {
                        build job: 'mapinfo-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy ogc-service') {
                    steps {
                        build job: 'ogc-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy permalink-service') {
                    steps {
                        build job: 'permalink-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy plotinfo-service') {
                    steps {
                        build job: 'plotinfo-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy print-service') {
                    steps {
                        build job: 'print-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                stage ('Deploy search-service') {
                    steps {
                        build job: 'search-service', parameters: [ string(name: 'version', value: "${version.version}"), string(name: 'qwcVersion', value: "${version.qwcVersion}"), string(name: 'build', value: "${version.build}") ], wait: true, propagate: true 
                        }
                    }
                }
            }
        }
    }
